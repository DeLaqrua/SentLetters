unit UnitMain;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, Vcl.Grids, DateUtils, Vcl.FileCtrl, ActiveX, System.Win.ComObj,
  Vcl.Samples.Spin;

type
  TFormMain = class(TForm)
    buttonCheck: TButton;
    LabelMonth: TLabel;
    comboboxSelectMO: TComboBox;
    labelSelectMo: TLabel;
    labelSelectDirectory: TLabel;
    editSelectDirectory: TEdit;
    buttonSelectDirectory: TButton;
    groupboxSelectMO: TGroupBox;
    groupboxSelectDirectory: TGroupBox;
    LabelSelectMonth: TLabel;
    comboboxSelectMonth: TComboBox;
    SpinEditYear: TSpinEdit;
    stringgridMails: TStringGrid;
    procedure FormCreate(Sender: TObject);
    procedure buttonSelectDirectoryClick(Sender: TObject);
    procedure buttonCheckClick(Sender: TObject);
    procedure comboboxSelectMonthSelect(Sender: TObject);
    procedure SpinEditYearChange(Sender: TObject);
    procedure stringgridMailsMouseEnter(Sender: TObject);
  private
    { Private declarations }
  public
    function correctPath(inputDirectory: string): string;
    function checkExcelInstall: boolean;
  end;

var
  FormMain: TFormMain;

var
  directoryRoot: string;
  selectedNumberMonth, selectedYear: integer;
  selectedMonth: string;
const
  ALLMO = 0;

implementation

{$R *.dfm}

procedure TFormMain.FormCreate(Sender: TObject);
var excelCodeMO: variant;
    i, lastRow:integer;
begin
  stringgridLetters.Cells[0,0] := 'Код МО:';
  stringgridLetters.Cells[2,0] := 'Дата:';
  stringgridLetters.Cells[3,0] := 'Файл:';

  comboboxSelectMo.ItemIndex := ALLMO;
  if FileExists(ExtractFilePath(ParamStr(0))+'codeMO.xls') = True then
    begin
      excelCodeMO := CreateOleObject('Excel.Application');
      try
        excelCodeMO.Workbooks.Open(ExtractFilePath(ParamStr(0))+'codeMO.xls');
        lastRow := excelCodeMO.WorkSheets[1].UsedRange.Rows.Count;
        for i := 2 to lastRow do
          begin
            comboboxSelectMO.Items[i-1] := VarToStr(excelCodeMO.Range['A'+IntToStr(i)]) + ' – ' + VarToStr(excelCodeMO.Range['B'+IntToStr(i)]);
          end;

        stringgridLetters.RowCount := lastRow; //Определяем количество строк StringGrid
                                                 //равное количеству МО из Excel-документа

        excelCodeMO.DisplayAlerts := False; //Отключаем оповещение, чтобы, когда закрывался Excel-файл,
                                            //не спрашивалось сохранить ли файл.
      finally
        excelCodeMO.Quit;
      end;
    end
  else
    ShowMessage('В папке с программой отсутствует Excel-файл "codeMO.xls". Это справочник с больницами. Без него программа работать не будет');

  selectedYear := YearOf(Date);
  spineditYear.Value := selectedYear;
  selectedNumberMonth := MonthOf(Date);
  comboboxSelectMonth.ItemIndex := selectedNumberMonth;
  case selectedNumberMonth of
    1 : selectedMonth := 'Январь';
    2 : selectedMonth := 'Февраль';
    3 : selectedMonth := 'Март';
    4 : selectedMonth := 'Апрель';
    5 : selectedMonth := 'Май';
    6 : selectedMonth := 'Июнь';
    7 : selectedMonth := 'Июль';
    8 : selectedMonth := 'Август';
    9 : selectedMonth := 'Сентябрь';
    10 : selectedMonth := 'Октябрь';
    11 : selectedMonth := 'Ноябрь';
    12 : selectedMonth := 'Декабрь';
  end;
  labelMonth.Caption := 'Письма за месяц ' + selectedMonth + ' ' + IntToStr(selectedYear) + ' года:';

  directoryRoot := correctPath(editSelectDirectory.Text);
end;

procedure TFormMain.SpinEditYearChange(Sender: TObject);
begin
  selectedYear := spineditYear.Value;
  if selectedNumberMonth = 0 then
    labelMonth.Caption := 'Письма за все месяцы' + ' ' + IntToStr(selectedYear) + ' года:'
  else
    labelMonth.Caption := 'Письма за месяц ' + selectedMonth + ' ' + IntToStr(selectedYear) + ' года:';
end;

procedure TFormMain.stringgridMailsMouseEnter(Sender: TObject);
begin
  stringgridLetters.SetFocus;
end;

procedure TFormMain.comboboxSelectMonthSelect(Sender: TObject);
begin
  selectedNumberMonth := comboboxSelectMonth.ItemIndex;
  case selectedNumberMonth of
    1 : selectedMonth := 'Январь';
    2 : selectedMonth := 'Февраль';
    3 : selectedMonth := 'Март';
    4 : selectedMonth := 'Апрель';
    5 : selectedMonth := 'Май';
    6 : selectedMonth := 'Июнь';
    7 : selectedMonth := 'Июль';
    8 : selectedMonth := 'Август';
    9 : selectedMonth := 'Сентябрь';
    10 : selectedMonth := 'Октябрь';
    11 : selectedMonth := 'Ноябрь';
    12 : selectedMonth := 'Декабрь';
  else selectedMonth := 'Все месяцы';
  end;
  if selectedNumberMonth = 0 then
    labelMonth.Caption := 'Письма за все месяцы' + ' ' + IntToStr(selectedYear) + ' года:'
  else
    labelMonth.Caption := 'Письма за месяц ' + selectedMonth + ' ' + IntToStr(selectedYear) + ' года:';
end;

procedure TFormMain.buttonCheckClick(Sender: TObject);
begin
  buttonCheck.Enabled := false;
  directoryRoot := correctPath(editSelectDirectory.Text);
  if System.SysUtils.DirectoryExists(DirectoryRoot) = False then
    ShowMessage('Проверьте папку для мониторинга писем. Программа такой папки не нашла.')
  else
  if checkExcelInstall = False then
    ShowMessage('На вашем компьютере не установлен Excel.')
  else
  if FileExists(ExtractFilePath(ParamStr(0))+'codeMO.xls') = False then
    ShowMessage('В папке с программой отсутствует Excel-файл "codeMO.xls". Это справочник с больницами. Без него программа работать не будет.');
  if System.SysUtils.DirectoryExists(directoryRoot + 'Archive\') = False then
    ShowMessage('Отсутствует папка "Archive" в директории ' + directoryRoot + ', в которой хрянятся отправленные письма.');
  buttonCheck.Enabled := true;
end;

procedure TFormMain.buttonSelectDirectoryClick(Sender: TObject);
begin
  if SelectDirectory('Выберите папку для работы Автопроцессинга:', '', directoryRoot, [sdNewFolder, sdShowShares, sdNewUI, sdValidateDir]) then
    editSelectDirectory.Text := directoryRoot;
end;

function TFormMain.correctPath(inputDirectory: string): string;
begin
  if inputDirectory = '' then
    Result := ''
  else
    begin
      inputDirectory := Trim(inputDirectory);

      if Pos('/', inputDirectory) <> 0 then
        begin
          inputDirectory := StringReplace(inputDirectory, '/', '\', [rfReplaceAll]);
        end;

      if inputDirectory[length(inputDirectory)] <> '\' then
        Result := inputDirectory + '\'
      else
        Result := inputDirectory;
    end;
end;

function TFormMain.checkExcelInstall;
var ClassID: TCLSID;
    HRES: HRESULT;
begin
  HRES := CLSIDFromProgId( PWideChar(WideString('Excel.Application')), ClassID );
  if HRES = S_OK then
    result := true
  else
    result := false;
end;

end.
